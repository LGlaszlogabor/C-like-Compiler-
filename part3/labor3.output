Grammar

    0 $accept: s $end

    1 s: statement
    2  | s statement

    3 expr: VALUE
    4     | VARIABLE
    5     | expr '+' expr
    6     | expr '-' expr
    7     | expr '*' expr
    8     | expr '/' expr

    9 condition_expr: /* empty */
   10               | condition OR condition
   11               | condition AND condition

   12 condition: expr EQUALS expr
   13          | expr NOT_EQUALS expr

   14 while: WHILE condition_expr DO s END_WHILE
   15      | WHILE condition DO s END_WHILE

   16 decision: IF condition THEN s END_IF
   17         | IF condition THEN s ELSE s END_IF
   18         | IF condition_expr THEN s END_IF
   19         | IF condition_expr THEN s ELSE s END_IF

   20 declaration: VARIABLE GIVE_VALUE expr
   21            | INTEGER VARIABLE
   22            | INTEGER VARIABLE GIVE_VALUE VALUE

   23 write: OUT expr
   24      | OUT TEXT

   25 statement: IN VARIABLE
   26          | write
   27          | decision
   28          | while
   29          | declaration


Terminals, with rules where they appear

$end (0) 0
'*' (42) 7
'+' (43) 5
'-' (45) 6
'/' (47) 8
error (256)
INTEGER (258) 21 22
GIVE_VALUE (259) 20 22
IN (260) 25
OUT (261) 23 24
TEXT (262) 24
VARIABLE (263) 4 20 21 22 25
VALUE (264) 3 22
EQUALS (265) 12
NOT_EQUALS (266) 13
AND (267) 11
OR (268) 10
IF (269) 16 17 18 19
THEN (270) 16 17 18 19
ELSE (271) 17 19
END_IF (272) 16 17 18 19
WHILE (273) 14 15
DO (274) 14 15
END_WHILE (275) 14 15


Nonterminals, with rules where they appear

$accept (25)
    on left: 0
s (26)
    on left: 1 2, on right: 0 2 14 15 16 17 18 19
expr (27)
    on left: 3 4 5 6 7 8, on right: 5 6 7 8 12 13 20 23
condition_expr (28)
    on left: 9 10 11, on right: 14 18 19
condition (29)
    on left: 12 13, on right: 10 11 15 16 17
while (30)
    on left: 14 15, on right: 28
decision (31)
    on left: 16 17 18 19, on right: 27
declaration (32)
    on left: 20 21 22, on right: 29
write (33)
    on left: 23 24, on right: 26
statement (34)
    on left: 25 26 27 28 29, on right: 1 2


state 0

    0 $accept: . s $end

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    WHILE     shift, and go to state 6

    s            go to state 7
    while        go to state 8
    decision     go to state 9
    declaration  go to state 10
    write        go to state 11
    statement    go to state 12


state 1

   21 declaration: INTEGER . VARIABLE
   22            | INTEGER . VARIABLE GIVE_VALUE VALUE

    VARIABLE  shift, and go to state 13


state 2

   25 statement: IN . VARIABLE

    VARIABLE  shift, and go to state 14


state 3

   23 write: OUT . expr
   24      | OUT . TEXT

    TEXT      shift, and go to state 15
    VARIABLE  shift, and go to state 16
    VALUE     shift, and go to state 17

    expr  go to state 18


state 4

   20 declaration: VARIABLE . GIVE_VALUE expr

    GIVE_VALUE  shift, and go to state 19


state 5

   16 decision: IF . condition THEN s END_IF
   17         | IF . condition THEN s ELSE s END_IF
   18         | IF . condition_expr THEN s END_IF
   19         | IF . condition_expr THEN s ELSE s END_IF

    VARIABLE  shift, and go to state 16
    VALUE     shift, and go to state 17

    $default  reduce using rule 9 (condition_expr)

    expr            go to state 20
    condition_expr  go to state 21
    condition       go to state 22


state 6

   14 while: WHILE . condition_expr DO s END_WHILE
   15      | WHILE . condition DO s END_WHILE

    VARIABLE  shift, and go to state 16
    VALUE     shift, and go to state 17

    $default  reduce using rule 9 (condition_expr)

    expr            go to state 20
    condition_expr  go to state 23
    condition       go to state 24


state 7

    0 $accept: s . $end
    2 s: s . statement

    $end      shift, and go to state 25
    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    WHILE     shift, and go to state 6

    while        go to state 8
    decision     go to state 9
    declaration  go to state 10
    write        go to state 11
    statement    go to state 26


state 8

   28 statement: while .

    $default  reduce using rule 28 (statement)


state 9

   27 statement: decision .

    $default  reduce using rule 27 (statement)


state 10

   29 statement: declaration .

    $default  reduce using rule 29 (statement)


state 11

   26 statement: write .

    $default  reduce using rule 26 (statement)


state 12

    1 s: statement .

    $default  reduce using rule 1 (s)


state 13

   21 declaration: INTEGER VARIABLE .
   22            | INTEGER VARIABLE . GIVE_VALUE VALUE

    GIVE_VALUE  shift, and go to state 27

    $default  reduce using rule 21 (declaration)


state 14

   25 statement: IN VARIABLE .

    $default  reduce using rule 25 (statement)


state 15

   24 write: OUT TEXT .

    $default  reduce using rule 24 (write)


state 16

    4 expr: VARIABLE .

    $default  reduce using rule 4 (expr)


state 17

    3 expr: VALUE .

    $default  reduce using rule 3 (expr)


state 18

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
   23 write: OUT expr .

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 23 (write)


state 19

   20 declaration: VARIABLE GIVE_VALUE . expr

    VARIABLE  shift, and go to state 16
    VALUE     shift, and go to state 17

    expr  go to state 32


state 20

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
   12 condition: expr . EQUALS expr
   13          | expr . NOT_EQUALS expr

    EQUALS      shift, and go to state 33
    NOT_EQUALS  shift, and go to state 34
    '+'         shift, and go to state 28
    '-'         shift, and go to state 29
    '*'         shift, and go to state 30
    '/'         shift, and go to state 31


state 21

   18 decision: IF condition_expr . THEN s END_IF
   19         | IF condition_expr . THEN s ELSE s END_IF

    THEN  shift, and go to state 35


state 22

   10 condition_expr: condition . OR condition
   11               | condition . AND condition
   16 decision: IF condition . THEN s END_IF
   17         | IF condition . THEN s ELSE s END_IF

    AND   shift, and go to state 36
    OR    shift, and go to state 37
    THEN  shift, and go to state 38


state 23

   14 while: WHILE condition_expr . DO s END_WHILE

    DO  shift, and go to state 39


state 24

   10 condition_expr: condition . OR condition
   11               | condition . AND condition
   15 while: WHILE condition . DO s END_WHILE

    AND  shift, and go to state 36
    OR   shift, and go to state 37
    DO   shift, and go to state 40


state 25

    0 $accept: s $end .

    $default  accept


state 26

    2 s: s statement .

    $default  reduce using rule 2 (s)


state 27

   22 declaration: INTEGER VARIABLE GIVE_VALUE . VALUE

    VALUE  shift, and go to state 41


state 28

    5 expr: expr '+' . expr

    VARIABLE  shift, and go to state 16
    VALUE     shift, and go to state 17

    expr  go to state 42


state 29

    6 expr: expr '-' . expr

    VARIABLE  shift, and go to state 16
    VALUE     shift, and go to state 17

    expr  go to state 43


state 30

    7 expr: expr '*' . expr

    VARIABLE  shift, and go to state 16
    VALUE     shift, and go to state 17

    expr  go to state 44


state 31

    8 expr: expr '/' . expr

    VARIABLE  shift, and go to state 16
    VALUE     shift, and go to state 17

    expr  go to state 45


state 32

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
   20 declaration: VARIABLE GIVE_VALUE expr .

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 20 (declaration)


state 33

   12 condition: expr EQUALS . expr

    VARIABLE  shift, and go to state 16
    VALUE     shift, and go to state 17

    expr  go to state 46


state 34

   13 condition: expr NOT_EQUALS . expr

    VARIABLE  shift, and go to state 16
    VALUE     shift, and go to state 17

    expr  go to state 47


state 35

   18 decision: IF condition_expr THEN . s END_IF
   19         | IF condition_expr THEN . s ELSE s END_IF

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    WHILE     shift, and go to state 6

    s            go to state 48
    while        go to state 8
    decision     go to state 9
    declaration  go to state 10
    write        go to state 11
    statement    go to state 12


state 36

   11 condition_expr: condition AND . condition

    VARIABLE  shift, and go to state 16
    VALUE     shift, and go to state 17

    expr       go to state 20
    condition  go to state 49


state 37

   10 condition_expr: condition OR . condition

    VARIABLE  shift, and go to state 16
    VALUE     shift, and go to state 17

    expr       go to state 20
    condition  go to state 50


state 38

   16 decision: IF condition THEN . s END_IF
   17         | IF condition THEN . s ELSE s END_IF

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    WHILE     shift, and go to state 6

    s            go to state 51
    while        go to state 8
    decision     go to state 9
    declaration  go to state 10
    write        go to state 11
    statement    go to state 12


state 39

   14 while: WHILE condition_expr DO . s END_WHILE

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    WHILE     shift, and go to state 6

    s            go to state 52
    while        go to state 8
    decision     go to state 9
    declaration  go to state 10
    write        go to state 11
    statement    go to state 12


state 40

   15 while: WHILE condition DO . s END_WHILE

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    WHILE     shift, and go to state 6

    s            go to state 53
    while        go to state 8
    decision     go to state 9
    declaration  go to state 10
    write        go to state 11
    statement    go to state 12


state 41

   22 declaration: INTEGER VARIABLE GIVE_VALUE VALUE .

    $default  reduce using rule 22 (declaration)


state 42

    5 expr: expr . '+' expr
    5     | expr '+' expr .
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 5 (expr)


state 43

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    6     | expr '-' expr .
    7     | expr . '*' expr
    8     | expr . '/' expr

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 6 (expr)


state 44

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    7     | expr '*' expr .
    8     | expr . '/' expr

    $default  reduce using rule 7 (expr)


state 45

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    8     | expr '/' expr .

    $default  reduce using rule 8 (expr)


state 46

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
   12 condition: expr EQUALS expr .

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 12 (condition)


state 47

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
   13 condition: expr NOT_EQUALS expr .

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 13 (condition)


state 48

    2 s: s . statement
   18 decision: IF condition_expr THEN s . END_IF
   19         | IF condition_expr THEN s . ELSE s END_IF

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    ELSE      shift, and go to state 54
    END_IF    shift, and go to state 55
    WHILE     shift, and go to state 6

    while        go to state 8
    decision     go to state 9
    declaration  go to state 10
    write        go to state 11
    statement    go to state 26


state 49

   11 condition_expr: condition AND condition .

    $default  reduce using rule 11 (condition_expr)


state 50

   10 condition_expr: condition OR condition .

    $default  reduce using rule 10 (condition_expr)


state 51

    2 s: s . statement
   16 decision: IF condition THEN s . END_IF
   17         | IF condition THEN s . ELSE s END_IF

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    ELSE      shift, and go to state 56
    END_IF    shift, and go to state 57
    WHILE     shift, and go to state 6

    while        go to state 8
    decision     go to state 9
    declaration  go to state 10
    write        go to state 11
    statement    go to state 26


state 52

    2 s: s . statement
   14 while: WHILE condition_expr DO s . END_WHILE

    INTEGER    shift, and go to state 1
    IN         shift, and go to state 2
    OUT        shift, and go to state 3
    VARIABLE   shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    END_WHILE  shift, and go to state 58

    while        go to state 8
    decision     go to state 9
    declaration  go to state 10
    write        go to state 11
    statement    go to state 26


state 53

    2 s: s . statement
   15 while: WHILE condition DO s . END_WHILE

    INTEGER    shift, and go to state 1
    IN         shift, and go to state 2
    OUT        shift, and go to state 3
    VARIABLE   shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    END_WHILE  shift, and go to state 59

    while        go to state 8
    decision     go to state 9
    declaration  go to state 10
    write        go to state 11
    statement    go to state 26


state 54

   19 decision: IF condition_expr THEN s ELSE . s END_IF

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    WHILE     shift, and go to state 6

    s            go to state 60
    while        go to state 8
    decision     go to state 9
    declaration  go to state 10
    write        go to state 11
    statement    go to state 12


state 55

   18 decision: IF condition_expr THEN s END_IF .

    $default  reduce using rule 18 (decision)


state 56

   17 decision: IF condition THEN s ELSE . s END_IF

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    WHILE     shift, and go to state 6

    s            go to state 61
    while        go to state 8
    decision     go to state 9
    declaration  go to state 10
    write        go to state 11
    statement    go to state 12


state 57

   16 decision: IF condition THEN s END_IF .

    $default  reduce using rule 16 (decision)


state 58

   14 while: WHILE condition_expr DO s END_WHILE .

    $default  reduce using rule 14 (while)


state 59

   15 while: WHILE condition DO s END_WHILE .

    $default  reduce using rule 15 (while)


state 60

    2 s: s . statement
   19 decision: IF condition_expr THEN s ELSE s . END_IF

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    END_IF    shift, and go to state 62
    WHILE     shift, and go to state 6

    while        go to state 8
    decision     go to state 9
    declaration  go to state 10
    write        go to state 11
    statement    go to state 26


state 61

    2 s: s . statement
   17 decision: IF condition THEN s ELSE s . END_IF

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    END_IF    shift, and go to state 63
    WHILE     shift, and go to state 6

    while        go to state 8
    decision     go to state 9
    declaration  go to state 10
    write        go to state 11
    statement    go to state 26


state 62

   19 decision: IF condition_expr THEN s ELSE s END_IF .

    $default  reduce using rule 19 (decision)


state 63

   17 decision: IF condition THEN s ELSE s END_IF .

    $default  reduce using rule 17 (decision)
