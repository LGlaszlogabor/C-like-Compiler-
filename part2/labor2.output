Grammar

    0 $accept: s $end

    1 s: statement
    2  | s statement

    3 expr: VALUE
    4     | VARIABLE
    5     | expr '+' expr
    6     | expr '-' expr
    7     | expr '*' expr
    8     | expr '/' expr

    9 condition_expr: /* empty */
   10               | condition OR condition
   11               | condition AND condition

   12 condition: expr EQUALS expr
   13          | expr NOT_EQUALS expr

   14 statement: VARIABLE GIVE_VALUE expr
   15          | WHILE condition DO s END_WHILE
   16          | IF condition THEN s END_IF
   17          | IF condition THEN s ELSE s END_IF
   18          | WHILE condition_expr DO s END_WHILE
   19          | IF condition_expr THEN s END_IF
   20          | IF condition_expr THEN s ELSE s END_IF
   21          | INTEGER VARIABLE
   22          | INTEGER VARIABLE GIVE_VALUE VALUE
   23          | OUT expr
   24          | IN VARIABLE


Terminals, with rules where they appear

$end (0) 0
'*' (42) 7
'+' (43) 5
'-' (45) 6
'/' (47) 8
error (256)
INTEGER (258) 21 22
GIVE_VALUE (259) 14 22
IN (260) 24
OUT (261) 23
VARIABLE (262) 4 14 21 22 24
VALUE (263) 3 22
EQUALS (264) 12
NOT_EQUALS (265) 13
AND (266) 11
OR (267) 10
IF (268) 16 17 19 20
THEN (269) 16 17 19 20
ELSE (270) 17 20
END_IF (271) 16 17 19 20
WHILE (272) 15 18
DO (273) 15 18
END_WHILE (274) 15 18


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
s (25)
    on left: 1 2, on right: 0 2 15 16 17 18 19 20
expr (26)
    on left: 3 4 5 6 7 8, on right: 5 6 7 8 12 13 14 23
condition_expr (27)
    on left: 9 10 11, on right: 18 19 20
condition (28)
    on left: 12 13, on right: 10 11 15 16 17
statement (29)
    on left: 14 15 16 17 18 19 20 21 22 23 24, on right: 1 2


state 0

    0 $accept: . s $end

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    WHILE     shift, and go to state 6

    s          go to state 7
    statement  go to state 8


state 1

   21 statement: INTEGER . VARIABLE
   22          | INTEGER . VARIABLE GIVE_VALUE VALUE

    VARIABLE  shift, and go to state 9


state 2

   24 statement: IN . VARIABLE

    VARIABLE  shift, and go to state 10


state 3

   23 statement: OUT . expr

    VARIABLE  shift, and go to state 11
    VALUE     shift, and go to state 12

    expr  go to state 13


state 4

   14 statement: VARIABLE . GIVE_VALUE expr

    GIVE_VALUE  shift, and go to state 14


state 5

   16 statement: IF . condition THEN s END_IF
   17          | IF . condition THEN s ELSE s END_IF
   19          | IF . condition_expr THEN s END_IF
   20          | IF . condition_expr THEN s ELSE s END_IF

    VARIABLE  shift, and go to state 11
    VALUE     shift, and go to state 12

    $default  reduce using rule 9 (condition_expr)

    expr            go to state 15
    condition_expr  go to state 16
    condition       go to state 17


state 6

   15 statement: WHILE . condition DO s END_WHILE
   18          | WHILE . condition_expr DO s END_WHILE

    VARIABLE  shift, and go to state 11
    VALUE     shift, and go to state 12

    $default  reduce using rule 9 (condition_expr)

    expr            go to state 15
    condition_expr  go to state 18
    condition       go to state 19


state 7

    0 $accept: s . $end
    2 s: s . statement

    $end      shift, and go to state 20
    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    WHILE     shift, and go to state 6

    statement  go to state 21


state 8

    1 s: statement .

    $default  reduce using rule 1 (s)


state 9

   21 statement: INTEGER VARIABLE .
   22          | INTEGER VARIABLE . GIVE_VALUE VALUE

    GIVE_VALUE  shift, and go to state 22

    $default  reduce using rule 21 (statement)


state 10

   24 statement: IN VARIABLE .

    $default  reduce using rule 24 (statement)


state 11

    4 expr: VARIABLE .

    $default  reduce using rule 4 (expr)


state 12

    3 expr: VALUE .

    $default  reduce using rule 3 (expr)


state 13

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
   23 statement: OUT expr .

    '+'  shift, and go to state 23
    '-'  shift, and go to state 24
    '*'  shift, and go to state 25
    '/'  shift, and go to state 26

    $default  reduce using rule 23 (statement)


state 14

   14 statement: VARIABLE GIVE_VALUE . expr

    VARIABLE  shift, and go to state 11
    VALUE     shift, and go to state 12

    expr  go to state 27


state 15

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
   12 condition: expr . EQUALS expr
   13          | expr . NOT_EQUALS expr

    EQUALS      shift, and go to state 28
    NOT_EQUALS  shift, and go to state 29
    '+'         shift, and go to state 23
    '-'         shift, and go to state 24
    '*'         shift, and go to state 25
    '/'         shift, and go to state 26


state 16

   19 statement: IF condition_expr . THEN s END_IF
   20          | IF condition_expr . THEN s ELSE s END_IF

    THEN  shift, and go to state 30


state 17

   10 condition_expr: condition . OR condition
   11               | condition . AND condition
   16 statement: IF condition . THEN s END_IF
   17          | IF condition . THEN s ELSE s END_IF

    AND   shift, and go to state 31
    OR    shift, and go to state 32
    THEN  shift, and go to state 33


state 18

   18 statement: WHILE condition_expr . DO s END_WHILE

    DO  shift, and go to state 34


state 19

   10 condition_expr: condition . OR condition
   11               | condition . AND condition
   15 statement: WHILE condition . DO s END_WHILE

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    DO   shift, and go to state 35


state 20

    0 $accept: s $end .

    $default  accept


state 21

    2 s: s statement .

    $default  reduce using rule 2 (s)


state 22

   22 statement: INTEGER VARIABLE GIVE_VALUE . VALUE

    VALUE  shift, and go to state 36


state 23

    5 expr: expr '+' . expr

    VARIABLE  shift, and go to state 11
    VALUE     shift, and go to state 12

    expr  go to state 37


state 24

    6 expr: expr '-' . expr

    VARIABLE  shift, and go to state 11
    VALUE     shift, and go to state 12

    expr  go to state 38


state 25

    7 expr: expr '*' . expr

    VARIABLE  shift, and go to state 11
    VALUE     shift, and go to state 12

    expr  go to state 39


state 26

    8 expr: expr '/' . expr

    VARIABLE  shift, and go to state 11
    VALUE     shift, and go to state 12

    expr  go to state 40


state 27

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
   14 statement: VARIABLE GIVE_VALUE expr .

    '+'  shift, and go to state 23
    '-'  shift, and go to state 24
    '*'  shift, and go to state 25
    '/'  shift, and go to state 26

    $default  reduce using rule 14 (statement)


state 28

   12 condition: expr EQUALS . expr

    VARIABLE  shift, and go to state 11
    VALUE     shift, and go to state 12

    expr  go to state 41


state 29

   13 condition: expr NOT_EQUALS . expr

    VARIABLE  shift, and go to state 11
    VALUE     shift, and go to state 12

    expr  go to state 42


state 30

   19 statement: IF condition_expr THEN . s END_IF
   20          | IF condition_expr THEN . s ELSE s END_IF

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    WHILE     shift, and go to state 6

    s          go to state 43
    statement  go to state 8


state 31

   11 condition_expr: condition AND . condition

    VARIABLE  shift, and go to state 11
    VALUE     shift, and go to state 12

    expr       go to state 15
    condition  go to state 44


state 32

   10 condition_expr: condition OR . condition

    VARIABLE  shift, and go to state 11
    VALUE     shift, and go to state 12

    expr       go to state 15
    condition  go to state 45


state 33

   16 statement: IF condition THEN . s END_IF
   17          | IF condition THEN . s ELSE s END_IF

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    WHILE     shift, and go to state 6

    s          go to state 46
    statement  go to state 8


state 34

   18 statement: WHILE condition_expr DO . s END_WHILE

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    WHILE     shift, and go to state 6

    s          go to state 47
    statement  go to state 8


state 35

   15 statement: WHILE condition DO . s END_WHILE

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    WHILE     shift, and go to state 6

    s          go to state 48
    statement  go to state 8


state 36

   22 statement: INTEGER VARIABLE GIVE_VALUE VALUE .

    $default  reduce using rule 22 (statement)


state 37

    5 expr: expr . '+' expr
    5     | expr '+' expr .
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr

    '*'  shift, and go to state 25
    '/'  shift, and go to state 26

    $default  reduce using rule 5 (expr)


state 38

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    6     | expr '-' expr .
    7     | expr . '*' expr
    8     | expr . '/' expr

    '*'  shift, and go to state 25
    '/'  shift, and go to state 26

    $default  reduce using rule 6 (expr)


state 39

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    7     | expr '*' expr .
    8     | expr . '/' expr

    $default  reduce using rule 7 (expr)


state 40

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    8     | expr '/' expr .

    $default  reduce using rule 8 (expr)


state 41

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
   12 condition: expr EQUALS expr .

    '+'  shift, and go to state 23
    '-'  shift, and go to state 24
    '*'  shift, and go to state 25
    '/'  shift, and go to state 26

    $default  reduce using rule 12 (condition)


state 42

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
   13 condition: expr NOT_EQUALS expr .

    '+'  shift, and go to state 23
    '-'  shift, and go to state 24
    '*'  shift, and go to state 25
    '/'  shift, and go to state 26

    $default  reduce using rule 13 (condition)


state 43

    2 s: s . statement
   19 statement: IF condition_expr THEN s . END_IF
   20          | IF condition_expr THEN s . ELSE s END_IF

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    ELSE      shift, and go to state 49
    END_IF    shift, and go to state 50
    WHILE     shift, and go to state 6

    statement  go to state 21


state 44

   11 condition_expr: condition AND condition .

    $default  reduce using rule 11 (condition_expr)


state 45

   10 condition_expr: condition OR condition .

    $default  reduce using rule 10 (condition_expr)


state 46

    2 s: s . statement
   16 statement: IF condition THEN s . END_IF
   17          | IF condition THEN s . ELSE s END_IF

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    ELSE      shift, and go to state 51
    END_IF    shift, and go to state 52
    WHILE     shift, and go to state 6

    statement  go to state 21


state 47

    2 s: s . statement
   18 statement: WHILE condition_expr DO s . END_WHILE

    INTEGER    shift, and go to state 1
    IN         shift, and go to state 2
    OUT        shift, and go to state 3
    VARIABLE   shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    END_WHILE  shift, and go to state 53

    statement  go to state 21


state 48

    2 s: s . statement
   15 statement: WHILE condition DO s . END_WHILE

    INTEGER    shift, and go to state 1
    IN         shift, and go to state 2
    OUT        shift, and go to state 3
    VARIABLE   shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    END_WHILE  shift, and go to state 54

    statement  go to state 21


state 49

   20 statement: IF condition_expr THEN s ELSE . s END_IF

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    WHILE     shift, and go to state 6

    s          go to state 55
    statement  go to state 8


state 50

   19 statement: IF condition_expr THEN s END_IF .

    $default  reduce using rule 19 (statement)


state 51

   17 statement: IF condition THEN s ELSE . s END_IF

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    WHILE     shift, and go to state 6

    s          go to state 56
    statement  go to state 8


state 52

   16 statement: IF condition THEN s END_IF .

    $default  reduce using rule 16 (statement)


state 53

   18 statement: WHILE condition_expr DO s END_WHILE .

    $default  reduce using rule 18 (statement)


state 54

   15 statement: WHILE condition DO s END_WHILE .

    $default  reduce using rule 15 (statement)


state 55

    2 s: s . statement
   20 statement: IF condition_expr THEN s ELSE s . END_IF

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    END_IF    shift, and go to state 57
    WHILE     shift, and go to state 6

    statement  go to state 21


state 56

    2 s: s . statement
   17 statement: IF condition THEN s ELSE s . END_IF

    INTEGER   shift, and go to state 1
    IN        shift, and go to state 2
    OUT       shift, and go to state 3
    VARIABLE  shift, and go to state 4
    IF        shift, and go to state 5
    END_IF    shift, and go to state 58
    WHILE     shift, and go to state 6

    statement  go to state 21


state 57

   20 statement: IF condition_expr THEN s ELSE s END_IF .

    $default  reduce using rule 20 (statement)


state 58

   17 statement: IF condition THEN s ELSE s END_IF .

    $default  reduce using rule 17 (statement)
